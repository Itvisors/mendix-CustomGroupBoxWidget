// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testgroupbox.proxies;

public class TestData implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject testDataMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestGroupBox.TestData";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Date("Date"),
		Customer("Customer"),
		SalesValue("SalesValue"),
		OrderLineCount("OrderLineCount"),
		Remarks("Remarks");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TestData(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected TestData(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject testDataMendixObject)
	{
		if (testDataMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, testDataMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.testDataMendixObject = testDataMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static testgroupbox.proxies.TestData initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testgroupbox.proxies.TestData(context, mendixObject);
	}

	public static testgroupbox.proxies.TestData load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testgroupbox.proxies.TestData.initialize(context, mendixObject);
	}

	public static java.util.List<testgroupbox.proxies.TestData> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> testgroupbox.proxies.TestData.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of Date
	 */
	public final java.util.Date getDate()
	{
		return getDate(getContext());
	}

	/**
	 * @param context
	 * @return value of Date
	 */
	public final java.util.Date getDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Date.toString());
	}

	/**
	 * Set value of Date
	 * @param date
	 */
	public final void setDate(java.util.Date date)
	{
		setDate(getContext(), date);
	}

	/**
	 * Set value of Date
	 * @param context
	 * @param date
	 */
	public final void setDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.Date.toString(), date);
	}

	/**
	 * @return value of Customer
	 */
	public final java.lang.String getCustomer()
	{
		return getCustomer(getContext());
	}

	/**
	 * @param context
	 * @return value of Customer
	 */
	public final java.lang.String getCustomer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Customer.toString());
	}

	/**
	 * Set value of Customer
	 * @param customer
	 */
	public final void setCustomer(java.lang.String customer)
	{
		setCustomer(getContext(), customer);
	}

	/**
	 * Set value of Customer
	 * @param context
	 * @param customer
	 */
	public final void setCustomer(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String customer)
	{
		getMendixObject().setValue(context, MemberNames.Customer.toString(), customer);
	}

	/**
	 * @return value of SalesValue
	 */
	public final java.math.BigDecimal getSalesValue()
	{
		return getSalesValue(getContext());
	}

	/**
	 * @param context
	 * @return value of SalesValue
	 */
	public final java.math.BigDecimal getSalesValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.SalesValue.toString());
	}

	/**
	 * Set value of SalesValue
	 * @param salesvalue
	 */
	public final void setSalesValue(java.math.BigDecimal salesvalue)
	{
		setSalesValue(getContext(), salesvalue);
	}

	/**
	 * Set value of SalesValue
	 * @param context
	 * @param salesvalue
	 */
	public final void setSalesValue(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal salesvalue)
	{
		getMendixObject().setValue(context, MemberNames.SalesValue.toString(), salesvalue);
	}

	/**
	 * @return value of OrderLineCount
	 */
	public final java.lang.Integer getOrderLineCount()
	{
		return getOrderLineCount(getContext());
	}

	/**
	 * @param context
	 * @return value of OrderLineCount
	 */
	public final java.lang.Integer getOrderLineCount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.OrderLineCount.toString());
	}

	/**
	 * Set value of OrderLineCount
	 * @param orderlinecount
	 */
	public final void setOrderLineCount(java.lang.Integer orderlinecount)
	{
		setOrderLineCount(getContext(), orderlinecount);
	}

	/**
	 * Set value of OrderLineCount
	 * @param context
	 * @param orderlinecount
	 */
	public final void setOrderLineCount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer orderlinecount)
	{
		getMendixObject().setValue(context, MemberNames.OrderLineCount.toString(), orderlinecount);
	}

	/**
	 * @return value of Remarks
	 */
	public final java.lang.String getRemarks()
	{
		return getRemarks(getContext());
	}

	/**
	 * @param context
	 * @return value of Remarks
	 */
	public final java.lang.String getRemarks(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Remarks.toString());
	}

	/**
	 * Set value of Remarks
	 * @param remarks
	 */
	public final void setRemarks(java.lang.String remarks)
	{
		setRemarks(getContext(), remarks);
	}

	/**
	 * Set value of Remarks
	 * @param context
	 * @param remarks
	 */
	public final void setRemarks(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String remarks)
	{
		getMendixObject().setValue(context, MemberNames.Remarks.toString(), remarks);
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return testDataMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testgroupbox.proxies.TestData that = (testgroupbox.proxies.TestData) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
